# ‚úÖ shared/utils.py
# üì° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö publish MQTT ‡πÅ‡∏ö‡∏ö low-level ‡∏û‡∏£‡πâ‡∏≠‡∏° retry

import time
import json
import paho.mqtt.client as mqtt

# ==== MQTT CORE ====
def publish_mqtt(topic, payload, broker="localhost", port=1883, retry=3):
    """
    ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MQTT ‡πÑ‡∏õ‡∏¢‡∏±‡∏á broker ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ ‡∏û‡∏£‡πâ‡∏≠‡∏° retry ‡∏´‡∏≤‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß

    Args:
        topic (str): ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ MQTT ‡πÄ‡∏ä‡πà‡∏ô "smartlocker/C01/slot/1/status"
        payload (dict): ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON)
        broker (str): ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà MQTT broker (default: localhost)
        port (int): ‡∏û‡∏≠‡∏£‡πå‡∏ï MQTT (default: 1883)
        retry (int): ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ retry ‡∏´‡∏≤‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    """
    for attempt in range(retry):
        try:
            client = mqtt.Client()
            client.connect(broker, port, 60)

            client.loop_start()
            client.publish(topic, json.dumps(payload))
            time.sleep(0.5)
            client.loop_stop()

            client.disconnect()
            print(f"[MQTT] Published to {topic} ‚Üí {payload}")
            return
        except Exception as e:
            print(f"‚ùå MQTT Publish Error (attempt {attempt+1}): {e}")
            time.sleep(2)
